// <auto-generated />
using System;
using AuctionService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AuctionService.Migrations
{
    [DbContext(typeof(AuctionDbContext))]
    partial class AuctionDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AuctionService.Entities.Auction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AuctionEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CurrentHighBid")
                        .HasColumnType("int");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MyProperty")
                        .HasColumnType("int");

                    b.Property<int>("ReservePrice")
                        .HasColumnType("int");

                    b.Property<string>("Seller")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SoldAmount")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Winner")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.ToTable("Auctions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("afbee524-5972-4075-8800-7d1f9d7b0a0c"),
                            AuctionEnd = new DateTime(2025, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 4, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemId = new Guid("247f3fd9-d34d-4f72-8f2c-c38a4be7e3a4"),
                            MyProperty = 0,
                            ReservePrice = 20000,
                            Seller = "bob",
                            Status = 0,
                            UpdatedAt = new DateTime(2025, 4, 29, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("c8c3ec17-01bf-49db-82aa-1ef80b833a9f"),
                            AuctionEnd = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 4, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemId = new Guid("1e64b61f-56a2-41c4-84b2-7db83be6eb5a"),
                            MyProperty = 0,
                            ReservePrice = 90000,
                            Seller = "alice",
                            Status = 0,
                            UpdatedAt = new DateTime(2025, 4, 29, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("bbab4d5a-8565-48b1-9450-5ac2a5c4a654"),
                            AuctionEnd = new DateTime(2025, 5, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 4, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemId = new Guid("d166d7c7-ec02-4b1d-9f0a-0841c03c2374"),
                            MyProperty = 0,
                            ReservePrice = 0,
                            Seller = "bob",
                            Status = 0,
                            UpdatedAt = new DateTime(2025, 4, 29, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("155225c1-4448-4066-9886-6786536e05ea"),
                            AuctionEnd = new DateTime(2025, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 4, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemId = new Guid("eab59875-7c85-457d-b5b2-ad6e5024b0d7"),
                            MyProperty = 0,
                            ReservePrice = 50000,
                            Seller = "tom",
                            Status = 2,
                            UpdatedAt = new DateTime(2025, 4, 29, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("466e4744-4dc5-4987-aae0-b621acfc5e39"),
                            AuctionEnd = new DateTime(2025, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 4, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemId = new Guid("12d87902-4afc-415d-bc14-c44724f16954"),
                            MyProperty = 0,
                            ReservePrice = 20000,
                            Seller = "alice",
                            Status = 0,
                            UpdatedAt = new DateTime(2025, 4, 29, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("dc1e4071-d19d-459b-b848-b5c3cd3d151f"),
                            AuctionEnd = new DateTime(2025, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 4, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemId = new Guid("a2510c14-f119-4717-b4d5-c3eefe4b5782"),
                            MyProperty = 0,
                            ReservePrice = 20000,
                            Seller = "bob",
                            Status = 0,
                            UpdatedAt = new DateTime(2025, 4, 29, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("47111973-d176-4feb-848d-0ea22641c31a"),
                            AuctionEnd = new DateTime(2025, 5, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 4, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemId = new Guid("d3f9cf03-8a07-493d-9945-2cba4e3e1360"),
                            MyProperty = 0,
                            ReservePrice = 150000,
                            Seller = "alice",
                            Status = 0,
                            UpdatedAt = new DateTime(2025, 4, 29, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("6a5011a1-fe1f-47df-9a32-b5346b289391"),
                            AuctionEnd = new DateTime(2025, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 4, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemId = new Guid("a899e12c-3ddd-4cab-ae66-d6031a4b626f"),
                            MyProperty = 0,
                            ReservePrice = 0,
                            Seller = "bob",
                            Status = 0,
                            UpdatedAt = new DateTime(2025, 4, 29, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("40490065-dac7-46b6-acc4-df507e0d6570"),
                            AuctionEnd = new DateTime(2025, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 4, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemId = new Guid("d90c328e-a26c-492d-b7c5-3ec037d1919d"),
                            MyProperty = 0,
                            ReservePrice = 20000,
                            Seller = "tom",
                            Status = 0,
                            UpdatedAt = new DateTime(2025, 4, 29, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3659ac24-29dd-407a-81f5-ecfe6f924b9b"),
                            AuctionEnd = new DateTime(2025, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 4, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemId = new Guid("9be53e24-81e5-4e38-ab15-c14b2920c8ea"),
                            MyProperty = 0,
                            ReservePrice = 20000,
                            Seller = "bob",
                            Status = 0,
                            UpdatedAt = new DateTime(2025, 4, 29, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("AuctionService.Entities.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Mileage")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = new Guid("247f3fd9-d34d-4f72-8f2c-c38a4be7e3a4"),
                            Color = "White",
                            ImageUrl = "https://cdn.pixabay.com/photo/2016/05/06/16/32/car-1376190_960_720.jpg",
                            Make = "Ford",
                            Mileage = 50000,
                            Model = "GT",
                            Year = 2020
                        },
                        new
                        {
                            Id = new Guid("1e64b61f-56a2-41c4-84b2-7db83be6eb5a"),
                            Color = "Black",
                            ImageUrl = "https://cdn.pixabay.com/photo/2012/05/29/00/43/car-49278_960_720.jpg",
                            Make = "Bugatti",
                            Mileage = 15035,
                            Model = "Veyron",
                            Year = 2018
                        },
                        new
                        {
                            Id = new Guid("d166d7c7-ec02-4b1d-9f0a-0841c03c2374"),
                            Color = "Black",
                            ImageUrl = "https://cdn.pixabay.com/photo/2012/11/02/13/02/car-63930_960_720.jpg",
                            Make = "Ford",
                            Mileage = 65125,
                            Model = "Mustang",
                            Year = 2023
                        },
                        new
                        {
                            Id = new Guid("eab59875-7c85-457d-b5b2-ad6e5024b0d7"),
                            Color = "Silver",
                            ImageUrl = "https://cdn.pixabay.com/photo/2016/04/17/22/10/mercedes-benz-1335674_960_720.png",
                            Make = "Mercedes",
                            Mileage = 15001,
                            Model = "SLK",
                            Year = 2020
                        },
                        new
                        {
                            Id = new Guid("12d87902-4afc-415d-bc14-c44724f16954"),
                            Color = "White",
                            ImageUrl = "https://cdn.pixabay.com/photo/2017/08/31/05/47/bmw-2699538_960_720.jpg",
                            Make = "BMW",
                            Mileage = 90000,
                            Model = "X1",
                            Year = 2017
                        },
                        new
                        {
                            Id = new Guid("a2510c14-f119-4717-b4d5-c3eefe4b5782"),
                            Color = "Red",
                            ImageUrl = "https://cdn.pixabay.com/photo/2017/11/09/01/49/ferrari-458-spider-2932191_960_720.jpg",
                            Make = "Ferrari",
                            Mileage = 50000,
                            Model = "Spider",
                            Year = 2015
                        },
                        new
                        {
                            Id = new Guid("d3f9cf03-8a07-493d-9945-2cba4e3e1360"),
                            Color = "Red",
                            ImageUrl = "https://cdn.pixabay.com/photo/2017/11/08/14/39/ferrari-f430-2930661_960_720.jpg",
                            Make = "Ferrari",
                            Mileage = 5000,
                            Model = "F-430",
                            Year = 2022
                        },
                        new
                        {
                            Id = new Guid("a899e12c-3ddd-4cab-ae66-d6031a4b626f"),
                            Color = "White",
                            ImageUrl = "https://cdn.pixabay.com/photo/2019/12/26/20/50/audi-r8-4721217_960_720.jpg",
                            Make = "Audi",
                            Mileage = 10050,
                            Model = "R8",
                            Year = 2021
                        },
                        new
                        {
                            Id = new Guid("d90c328e-a26c-492d-b7c5-3ec037d1919d"),
                            Color = "Black",
                            ImageUrl = "https://cdn.pixabay.com/photo/2016/09/01/15/06/audi-1636320_960_720.jpg",
                            Make = "Audi",
                            Mileage = 25400,
                            Model = "TT",
                            Year = 2020
                        },
                        new
                        {
                            Id = new Guid("9be53e24-81e5-4e38-ab15-c14b2920c8ea"),
                            Color = "Rust",
                            ImageUrl = "https://cdn.pixabay.com/photo/2017/08/02/19/47/vintage-2573090_960_720.jpg",
                            Make = "Ford",
                            Mileage = 150150,
                            Model = "Model T",
                            Year = 1938
                        });
                });

            modelBuilder.Entity("AuctionService.Entities.Auction", b =>
                {
                    b.HasOne("AuctionService.Entities.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });
#pragma warning restore 612, 618
        }
    }
}
