services:
  mongodb:
    image: mongo:latest
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=mongopw
    ports:
      - 27017:27017
    volumes:
      - mongodata:/data/db
    # healthcheck:
    #   test:
    #     [
    #       "CMD",
    #       "mongosh",
    #       "--quiet",
    #       "127.0.0.1/test",
    #       "--eval",
    #       "'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)'",
    #     ]
    #   interval: 10s
    #   timeout: 10s
    #   retries: 5
    #   start_period: 40s

  rabbitmq:
    image: rabbitmq:4-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    # healthcheck:
    #   test: rabbitmq-diagnostics check_port_connectivity
    #   interval: 5s
    #   timeout: 5s
    #   retries: 5

  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    user: root
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=Sqlserverpw1#
      - MSSQL_PID=Evaluation
      - MSSQL_AGENT_ENABLED=true
    ports:
      - 1533:1433
    volumes:
      - sqlserver:/data/db
    # healthcheck:
    #   test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P Sqlserverpw1# -Q 'SELECT 1' || exit 1"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 5
    #   start_period: 40s

  auction-svc:
    image: dimi01/auction-svc:latest
    build:
      context: .
      dockerfile: AuctionService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__DefaultConnection=Server=mssql;Database=Auctions;User Id=sa;Password=Sqlserverpw1#;Trusted_Connection=False;TrustServerCertificate=True;
      - IdentityServiceUrl=http://identity-svc
    ports:
      - 7001:80
    depends_on:
      - mssql
      - rabbitmq
      # mssql:
      #  condition: service_healthy
      # rabbitmq:
      #  condition: service_healthy

  search-svc:
    image: dimi01/search-svc:latest
    build:
      context: .
      dockerfile: SearchService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__MongoDbConnection=mongodb://root:mongopw@mongodb
      - AuctionServiceUrl=http://auction-svc
    ports:
      - 7002:80
    depends_on:
      - mongodb
      - rabbitmq
      # mongodb:
      #  condition: service_healthy
      # rabbitmq:
      #  condition: service_healthy

  identity-svc:
    image: dimi01/identity-svc:latest
    build:
      context: .
      dockerfile: IdentityService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Server=mssql;Database=Identity;User Id=sa;Password=Sqlserverpw1#;Trusted_Connection=False;TrustServerCertificate=True;
    ports:
      - 5001:80
    depends_on:
       - mssql
      # mssql:
      #  condition: service_healthy

  gateway-svc:
    image: dimi01/gateway-svc:latest
    build:
      context: .
      dockerfile: GatewayService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ReverseProxy__Clusters__auctions__Destinations__auctionApi__Address=http://auction-svc
      - ReverseProxy__Clusters__search__Destinations__searchApi__Address=http://search-svc
    ports:
      - 6001:80

volumes:
  mongodata:
  sqlserver:
